name: Build and release

on:
  workflow_dispatch:
  # Uncomment this once we have something to actually build / release
  # push:
  #   branches:
  #     - main

env:
  BEFORE_SHA: ${{ github.event.before }}

jobs:
  main:
    if: startsWith(github.event.head_commit.message, 'Merge pull request')
    permissions:
      pull-requests: write
      issues: write
      contents: write
      packages: write

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ github.workspace }}

    steps:
      - name: Checkout all commits [default branch]
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Use Node.js v18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Get yarn cache path
        id: get-cache-dir
        run: echo "cache-dir=$(yarn --silent cache dir)" >> $GITHUB_OUTPUT

      - name: Use the node_modules cache if available
        uses: actions/cache@v3
        with:
          path: ${{ steps.get-cache-dir.outputs.cache-dir }}
          key: ${{ runner.os }}-node-18-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-18-

      - name: Install packages
        run: |
          echo "Running yarn install --frozen-lockfile"
          yarn install --frozen-lockfile

      - name: Lint the workspace setup
        run: |
          echo "## Lint the workspace files" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          (yarn --silent nx workspace-lint && echo "✅ Workspace lint passed") >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

      - name: Check formatting of code in the workspace
        run: |
          echo "## Check formatting of files in the workspace" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          (yarn --silent nx format:check --base=$BEFORE_SHA && echo "✅ Format check passed") >> $GITHUB_STEP_SUMMARY

      - name: Lint affected code
        run: |
          echo "## Run eslint on all affected code" >> $GITHUB_STEP_SUMMARY
          echo "## >> $GITHUB_STEP_SUMMARY"
          yarn --silent nx affected --base=$BEFORE_SHA --target=lint >> $GITHUB_STEP_SUMMARY

      - name: Test affected code
        run: |
          echo "## Test results" >> $GITHUB_STEP_SUMMARY
          yarn  --silent nx affected --base=$BEFORE_SHA --target=test >> $GITHUB_STEP_SUMMARY

      - name: Build affected packages
        run: |
          echo "## Test results" >> $GITHUB_STEP_SUMMARY
          yarn  --silent nx affected --base=$BEFORE_SHA --target=build >> $GITHUB_STEP_SUMMARY

      - name: Release
        if: ${{ success() }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PKG_REPO_TOKEN }}
        run: |
          echo "## Release affected libs"
          yarn --silent nx affected --base=$BEFORE_SHA --target release
